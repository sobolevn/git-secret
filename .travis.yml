dist: xenial

matrix:
  fast_finish: true
  include:
    #- os: windows
    #  env: GITSECRET_DIST="windows"
    #  sudo: required
    #  language: sh
    - os: osx
      env: GITSECRET_DIST="brew"
      sudo: required
      language: shell
      #language: ruby
      #rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg1-alpine-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg1-debian-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg1-fedora-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg1-ubuntu-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg1-ubuntu-rolling"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg2-alpine-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    # distribute deb on this successful test
    - os: linux
      env: KITCHEN_REGEXP="gnupg2-debian-latest"; GITSECRET_DIST="deb"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    # distribute rpm on this successful test
    - os: linux
      env: KITCHEN_REGEXP="gnupg2-fedora-latest"; GITSECRET_DIST="rpm"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg2-ubuntu-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg2-ubuntu-rolling"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg-git-fedora-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg-git-ubuntu-latest"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6
    - os: linux
      env: KITCHEN_REGEXP="gnupg-git-ubuntu-rolling"
      services: docker
      sudo: required
      language: ruby
      rvm: 2.6

before_install:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then gem update --system && gem install bundler; fi

before_script:
  - chmod +x ".ci/before_script.sh" && ".ci/before_script.sh"

script:
  - chmod +x ".ci/script.sh" && ".ci/script.sh"

before_deploy:
  - chmod +x ".ci/before_deploy.sh" && ".ci/before_deploy.sh" && chmod +x ".ci/github_release_script.sh" 

deploy:
  - provider: bintray
    skip_cleanup: true
    on:
      all_branches: true
      tag: true
      condition: "$TRAVIS_TAG =~ ^v.*$ && $GITSECRET_DIST == deb"
    file: "build/deb_descriptor.json"
    user: "sobolevn"
    key: "$BINTRAY_API_KEY"
    passphrase: "$BINTRAY_GPG_PASS"
  - provider: bintray
    skip_cleanup: true
    on:
      all_branches: true
      tag: true
      condition: "$TRAVIS_TAG =~ ^v.*$ && $GITSECRET_DIST == rpm"
    file: "build/rpm_descriptor.json"
    user: "sobolevn"
    key: "$BINTRAY_API_KEY"
    passphrase: "$BINTRAY_GPG_PASS"
  - provider: script
    script: bash .ci/github_release_script.sh
    on:
      all_branches: true
      tag: true
      condition: "$TRAVIS_TAG =~ ^v.*$ && $GITSECRET_DIST == rpm"

after_deploy:
  - chmod +x ".ci/after_deploy.sh" && ".ci/after_deploy.sh"

notifications:
  email:
    on_success: never
    on_failure: change
